
#-ui-

library(shiny)

# Define UI for application that draws a histogram
shinyUI(fluidPage(

    # Application title
    titlePanel("Breast Cancer Prediction"),
    
    navlistPanel(
      "Menu",
      tabPanel("Documentation",
               includeMarkdown('documentation.Rmd'),
               ),
  
      tabPanel("Attribute Description and Data Summary",
               includeMarkdown('description.Rmd'),
               
               h3('Summary of Breast Cancer Dataset'),
               verbatimTextOutput("summary"),
               h3('Info on Breast Cancer Dataset'),
               verbatimTextOutput("info")),
      
      tabPanel("Tab3")
    ),
    

    # Sidebar with a slider input for number of bins
    sidebarLayout(
        sidebarPanel(
          textInput("name","Something that is standardized for tab without input"),
        ),
        

        # Show a plot of the generated distribution
        mainPanel(
          
          #output from main pane =l will display under the output from above section

    )
)
)
)



#-server-
library(shiny)

cancerDataset <- read.csv("data.csv")
cancerDataset = subset(cancerDataset, select = -c(id))

names(cancerDataset) <- c('Diagnosis', 'Radius_M', 'Texture_M', 'Perimeter_M', 'Area_M', 'Smootheness_M', 'Compactness_M', 'Concavity_M','ConcavePoints_M','Symmetry_M' ,'FractalDimension_M',
                          'Radius_se', 'Texture_se','Perimeter_se', 'Area_se', 'Smoothness_se', 'Compactness_se', 'Concavity_se','ConcavePoints_se', 'Symmetry_se', 'FractalDimension_se',
                          'Worst_Radius', 'Worst_Texture','Worst_Perimeter', 'Worst_Area', 'Worst_Smoothness', 'Worst_Compactness', 'Worst_Concavity','Worst_ConcavePoints', 'Worst_Symmetry', 'Worst_FractalDimension')

# Define server logic required to draw a histogram
shinyServer(function(input, output) {

    output$distPlot <- renderPlot({

        # generate bins based on input$bins from ui.R
        x    <- faithful[, 2]
        bins <- seq(min(x), max(x), length.out = input$bins + 1)

        # draw the histogram with the specified number of bins
        hist(x, breaks = bins, col = 'darkgray', border = 'white')

    })
    
    output$summary <- renderPrint({
      summary(cancerDataset)
    })
    
    output$info <- renderPrint({
      str(cancerDataset)
    })
    

})
