
#-ui-

library(shiny)

# Define UI for application that draws a histogram
shinyUI(fluidPage(

    # Application title
    titlePanel("Breast Cancer Prediction"),
    
    navlistPanel(
      "Menu",
      tabPanel("Documentation",
               h3('Introduction'),
               'Aiyai mates! Welcome to GraphIt R Shiny application. In this application, users can interact with the interface to check some of the 
                               relationships of the graphs based on the breast cancer dataset. This application can also make predictions for users based on the user input. 
                               This application can also show the accuracy and consistency of the prediction result based on the actual breast cancer dataset.',
               h3('User Input'),
               'There are 2 tabs that need the user to input the data through the side panel by clicking the checkboxes given which are the Exploratory Data Analysis 
                               tab and the Prediction tab.',
               h5('In the Exploratory Data Analysis tab, users need to choose the attributes to see the correlation'),
               h5('##### SOMETHING FOR PREDICTION TAB####'),
               
               h3('Attribute Description and Data Summary'),
               'The descriptions of each feature is provided here. Next, the breast cancer dataset is summarized by providing the Mininum, 1st Quartile, Median, Mean, 3rd Quartile and the Maximum values for each attribute. 
               The "Info" provides the number of observations, number of variables(attributes) and data type for each attribute.',
      
               h3('###### description not done Exploratory Data Analysis'),
               'In this tab, it requires user input so that users can view some visualized plots. There are some models to show the visualized plot. ', 
               h5('The 1st plot is Cross Correlation which portray...'),
               h5('The 2nd plot is Dimensionality Reduction which shows...'),
               h5('The 3rd plot is a box-plot that can make the user see....'),
      
               h3('Prediction'),
               'In this tab, it also requires user input so that users can get the predicted result of breast cancer based on our trained model and prepared dataset.',
      
               h3('Model Evaluation'),
               h5('This tab is about the evaluation of our model for the prediction. There are some models to show the evaluation.'),
               h5('First is the confusion matrix, which is used to measure the accuracy of the logistic regression model.'),
               h5('Second is precision and recall....'),
               h5('Third is Receiver Operating Characteristic(ROC) curve...')
               ),
  
      tabPanel("Attribute Description and Data Summary",
               h3('Description of variables'),
               'This section will describe the attributes for each columns: ', 
               h5('*Diagnosis: Display the prediction of diagnosis where 0= Malignant and 1=Benign'),
               h5('*Radius_M: Mean of distances from center to points on the perimeter'),
               h5('*Texture_M: The standard deviation of grayscale value'),
               h5('*Perimeter_M: Perimeter of cell'),
               h5('*Area_M: Area of cell '),
               h5('*Smootheness_M: Local variation in radius lengths'),
               h5('*Compactness_M: The perimeter^2/ area-1.0'),
               h5('*Concavity_M: Severity of concave portions of the contour'),
               h5('*ConcavePoint_M: Number of concave points of the contour'),
               h5('*Symmetry_M: Mean for perimeter of samples collected'),
               h5('*FractalDimension_M: "Coastline approximation" -1'),
               h5(''),
               h5('The features includes mean, standard error and "worst"(mean of the three largest values). For instance, mean radius, radius standard error and worst radius.'),
               
               h3('Summary of Breast Cancer Dataset'),
               verbatimTextOutput("summary"),
               h3('Info on Breast Cancer Dataset'),
               verbatimTextOutput("info")),
      
      tabPanel("Tab3")
    ),
    

    # Sidebar with a slider input for number of bins
    sidebarLayout(
        sidebarPanel(
          textInput("name","Something that is standardized for tab without input"),
        ),
        

        # Show a plot of the generated distribution
        mainPanel(
          
          #output from main pane =l will display under the output from above section

    )
)
)
)



#-server-
library(shiny)

cancerDataset <- read.csv("data.csv")
cancerDataset = subset(cancerDataset, select = -c(id))

names(cancerDataset) <- c('Diagnosis', 'Radius_M', 'Texture_M', 'Perimeter_M', 'Area_M', 'Smootheness_M', 'Compactness_M', 'Concavity_M','ConcavePoints_M','Symmetry_M' ,'FractalDimension_M',
                          'Radius_se', 'Texture_se','Perimeter_se', 'Area_se', 'Smoothness_se', 'Compactness_se', 'Concavity_se','ConcavePoints_se', 'Symmetry_se', 'FractalDimension_se',
                          'Worst_Radius', 'Worst_Texture','Worst_Perimeter', 'Worst_Area', 'Worst_Smoothness', 'Worst_Compactness', 'Worst_Concavity','Worst_ConcavePoints', 'Worst_Symmetry', 'Worst_FractalDimension')

# Define server logic required to draw a histogram
shinyServer(function(input, output) {

    output$distPlot <- renderPlot({

        # generate bins based on input$bins from ui.R
        x    <- faithful[, 2]
        bins <- seq(min(x), max(x), length.out = input$bins + 1)

        # draw the histogram with the specified number of bins
        hist(x, breaks = bins, col = 'darkgray', border = 'white')

    })
    
    output$summary <- renderPrint({
      summary(cancerDataset)
    })
    
    output$info <- renderPrint({
      str(cancerDataset)
    })
    

})
